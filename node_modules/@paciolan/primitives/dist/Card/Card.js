"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Paper = require("@material-ui/core/Paper");

var _Paper2 = _interopRequireDefault(_Paper);

var _styles = require("@material-ui/core/styles");

var _Card2 = require("./Card.subcomponent");

var _Card3 = require("./Card.style");

var _Card4 = _interopRequireDefault(_Card3);

var _utilities = require("@paciolan/utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propSelect = _utilities.componentUtils.propSelect;


var _Card = function _Card(props) {
  var allowedPropKeys = ["className"];
  var allowedProps = propSelect(props, allowedPropKeys);

  var childArray = _react2.default.Children.toArray(props.children);
  var childLength = childArray.length;
  var children = _react2.default.Children.map(props.children, function (child, index) {
    var isSquare = void 0,
        isRoundedTop = void 0,
        isRoundedBottom = void 0,
        showDivider = void 0;
    if (props.flat || props.square) {
      isSquare = true;
    } else if (child.type === _Card2.Content) {
      isRoundedTop = index === 0;
      isRoundedBottom = index === childLength - 1;
    }
    showDivider = child.type === _Card2.Content && index < childLength - 1 && !childArray[index + 1].props.compact;
    return _react2.default.cloneElement(child, {
      isSquare: isSquare,
      isRoundedTop: isRoundedTop,
      isRoundedBottom: isRoundedBottom,
      showDivider: showDivider
    });
  });

  return _react2.default.createElement(
    _Paper2.default,
    _extends({}, allowedProps, {
      elevation: props.flat ? 0 : 2,
      "data-componentname": "card"
    }),
    children
  );
};

var Card = (0, _Card4.default)(_Card);

exports.default = (0, _styles.withTheme)()(Card);


Card.propTypes = {
  flat: _propTypes2.default.bool,
  square: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  "data-testid": _propTypes2.default.string
};