"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextField = exports.Checkbox = exports.Radio = exports.RadioGroup = exports.Field = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Checkbox2 = require("@material-ui/core/Checkbox");

var _Checkbox3 = _interopRequireDefault(_Checkbox2);

var _Radio2 = require("@material-ui/core/Radio");

var _Radio3 = _interopRequireDefault(_Radio2);

var _TextField2 = require("@material-ui/core/TextField");

var _TextField3 = _interopRequireDefault(_TextField2);

var _styles = require("@material-ui/core/styles");

var _Form = require("./Form.style");

var _utilities = require("@paciolan/utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propSelect = _utilities.componentUtils.propSelect;


var _Field = function _Field(props) {
  var allowedPropKeys = ["className", "children", "onClick"];
  var allowedProps = propSelect(props, allowedPropKeys);
  return _react2.default.createElement("label", _extends({}, allowedProps, { "data-componentname": "form-field" }));
};

var RadioAttributeContext = _react2.default.createContext();

var _RadioGroup = function (_React$Component) {
  _inherits(_RadioGroup, _React$Component);

  function _RadioGroup(props) {
    _classCallCheck(this, _RadioGroup);

    var _this = _possibleConstructorReturn(this, (_RadioGroup.__proto__ || Object.getPrototypeOf(_RadioGroup)).call(this, props));

    _this.groupId = _RadioGroup.getId();
    _this.updateValue = _this.updateValue.bind(_this);
    _this.state = {
      selected: _this.props.value || _this.props.default
    };
    return _this;
  }

  _createClass(_RadioGroup, [{
    key: "updateValue",
    value: function updateValue(e) {
      var selected = this.props.value || e.target.value;
      this.setState({
        selected: selected
      });
      this.props.onChange(selected);
    }
  }, {
    key: "render",
    value: function render() {
      var contextObject = {
        selected: this.state.selected,
        clickHandler: this.updateValue,
        name: this.groupId
      };
      return _react2.default.createElement(
        RadioAttributeContext.Provider,
        { value: contextObject },
        this.props.children
      );
    }
  }], [{
    key: "getId",
    value: function getId() {
      if (!this.lastId) this.lastId = 1;
      return "radioGroup" + this.lastId++;
    }
  }]);

  return _RadioGroup;
}(_react2.default.Component);

var _Radio = function _Radio(props) {
  var allowedPropKeys = ["className", "children", "value", "disabled"];
  var allowedProps = propSelect(props, allowedPropKeys);
  return _react2.default.createElement(
    RadioAttributeContext.Consumer,
    null,
    function (ctx) {
      return _react2.default.createElement(_Radio3.default, _extends({
        checked: ctx.selected === props.value,
        onChange: ctx.clickHandler,
        name: ctx.name
      }, allowedProps, {
        "data-componentname": "radio-button"
      }));
    }
  );
};

var _Checkbox = function _Checkbox(props) {
  var allowedPropKeys = ["className", "children", "checked", "value", "disabled", "onChange", "onClick"];
  var allowedProps = propSelect(props, allowedPropKeys);
  return _react2.default.createElement(_Checkbox3.default, _extends({}, allowedProps, { "data-componentname": "checkbox" }));
};

var _TextField = function _TextField(props) {
  var allowedPropKeys = ["className", "children", "type", "placeholder", "label", "onChange", "style", "autoComplete", "value"];
  var allowedProps = propSelect(props, allowedPropKeys);
  return _react2.default.createElement(_TextField3.default, _extends({}, allowedProps, { "data-componentname": "text-field" }));
};

var Field = exports.Field = (0, _styles.withTheme)()((0, _Form.fieldStyle)(_Field));
var RadioGroup = exports.RadioGroup = (0, _styles.withTheme)()((0, _Form.radioGroupStyle)(_RadioGroup));
var Radio = exports.Radio = (0, _styles.withTheme)()((0, _Form.radioStyle)(_Radio));
var Checkbox = exports.Checkbox = (0, _styles.withTheme)()((0, _Form.checkboxStyle)(_Checkbox));
var TextField = exports.TextField = (0, _styles.withTheme)()((0, _Form.textfieldStyle)(_TextField));

Field.propTypes = {
  src: _propTypes2.default.string,
  height: _propTypes2.default.number,
  onClick: _propTypes2.default.func,
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  "data-testid": _propTypes2.default.string
};

RadioGroup.propTypes = {
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.bool]),
  onChange: _propTypes2.default.func
};

Radio.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.bool]),
  disabled: _propTypes2.default.bool,
  "data-testid": _propTypes2.default.string
};

Checkbox.propTypes = {
  compact: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  checked: _propTypes2.default.bool,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.bool]),
  disabled: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  onClick: _propTypes2.default.func,
  "data-testid": _propTypes2.default.string
};

TextField.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  type: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  label: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  style: _propTypes2.default.object,
  autoComplete: _propTypes2.default.string,
  value: _propTypes2.default.string,
  "data-testid": _propTypes2.default.string
};